
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> 
> options(digits=2)
> 
> set.seed(398585L)
> pompExample(ou2)
newly created object(s):
 ou2 
> 
> time(ou2) <- 1:10
> 
> Np <- 10000
> 
> prior.bounds <- rbind(
+                       alpha.2=c(-0.55,-0.45),
+                       alpha.3=c(0.25,0.35)
+                       )
> colnames(prior.bounds) <- c("lower","upper")
> 
> estnames <- rownames(prior.bounds)
> 
> prior <- matrix(data=coef(ou2),nrow=length(coef(ou2)),ncol=Np)
> rownames(prior) <- names(coef(ou2))
> for (n in estnames) {
+   prior[n,] <- runif(n=Np,min=prior.bounds[n,1],max=prior.bounds[n,2])
+ }
> 
> garb <- ou2
> coef(garb) <- numeric(0)
> try(garb <- bsmc(garb))
Error : in 'bsmc': 'params' must be supplied
> 
> ##Run Liu & West particle filter
> smc <- bsmc2(
+     ou2,
+     est="alpha.2",
+     params=prior,
+     smooth=0.02
+ )
> prior <- smc$prior
> post <- smc$post
> 
> try(bsmc(ou2,params=prior,est=estnames,ntries=5,smooth=0.02,lower=0,upper=c(0,1)))
Error : in 'bsmc': parameter(s) 'alpha.2' in column 1 in 'params' is/are outside the box defined by 'lower' and 'upper'
> try(bsmc(ou2,params=prior,est=estnames,ntries=5,smooth=0.02,lower=-100,upper=c(111,33,222)))
Error : in 'bsmc': 'lower' and 'upper' must each have length 1 or length equal to that of 'est'
> 
> smc <- bsmc(
+             ou2,
+             params=prior,
+             est=estnames,
+             ntries=5,
+             smooth=0.02,
+             lower=prior.bounds[estnames,"lower"],
+             upper=prior.bounds[estnames,"upper"]
+             )
> 
> prior <- smc$prior
> post <- smc$post
> 
> print(
+       cbind(
+             prior.mean=apply(prior,1,mean),
+             posterior.mean=apply(post,1,mean),
+             truth=coef(ou2),
+             t(apply(post,1,quantile,c(0.025,0.5,0.975)))
+             )
+       )
        prior.mean posterior.mean truth  2.5%   50%   98%
alpha.1        0.8           0.80   0.8  0.80  0.80  0.80
alpha.2       -0.5          -0.50  -0.5 -0.54 -0.50 -0.45
alpha.3        0.3           0.31   0.3  0.27  0.32  0.34
alpha.4        0.9           0.90   0.9  0.90  0.90  0.90
sigma.1        3.0           3.00   3.0  3.00  3.00  3.00
sigma.2       -0.5          -0.50  -0.5 -0.50 -0.50 -0.50
sigma.3        2.0           2.00   2.0  2.00  2.00  2.00
tau            1.0           1.00   1.0  1.00  1.00  1.00
x1.0          -3.0          -3.00  -3.0 -3.00 -3.00 -3.00
x2.0           4.0           4.00   4.0  4.00  4.00  4.00
> 
> print(min(smc$eff.sample.size))
[1] 11
> print(smc$log.evidence)
[1] 45
> 
> ou2 <- pomp(ou2,
+             rprior=function(params,...){
+               params
+             }
+             )
> 
> smc <- bsmc(ou2,ntries=5,Np=5000,smooth=0.1,est=estnames)
> print(smc$eff.sample.size)
 [1] 249.3  49.5  15.0   2.5 188.2   4.1 311.3  30.2 100.3 116.8
> print(smc$log.evidence)
[1] 39
> 
> proc.time()
   user  system elapsed 
  3.592   0.084   3.673 
