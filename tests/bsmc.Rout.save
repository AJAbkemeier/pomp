
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> 
> options(digits=2)
> 
> png(filename="bsmc-%02d.png",res=100)
> 
> set.seed(398585L)
> pompExample(ou2)
newly created object(s):
 ou2 
> 
> time(ou2) <- 1:10
> 
> Np <- 10000
> 
> try(smc <- bsmc(ou2,Np=2,smooth=0.01,est=estnames,
+                  tol=1e-2,max.fail=100))
Error : in ‘bsmc’: ‘rprior’ error: operation cannot be completed: rprior has not been specified
> 
> prior.bounds <- rbind(
+                       alpha.2=c(-0.55,-0.45),
+                       alpha.3=c(0.25,0.35)
+                       )
> colnames(prior.bounds) <- c("lower","upper")
> 
> estnames <- rownames(prior.bounds)
> 
> prior <- matrix(data=coef(ou2),nrow=length(coef(ou2)),ncol=Np)
> rownames(prior) <- names(coef(ou2))
> for (n in estnames) {
+   prior[n,] <- runif(n=Np,min=prior.bounds[n,1],max=prior.bounds[n,2])
+ }
> 
> garb <- ou2
> coef(garb) <- numeric(0)
> try(garb <- bsmc(garb))
Error : in ‘bsmc’: ‘params’ must be supplied
> 
> ##Run Liu & West particle filter
> smc <- bsmc2(ou2,est="alpha.2",params=prior,smooth=0.02)
> prior <- smc$prior
> post <- smc$post
> 
> try(bsmc(ou2,params=prior,est=estnames,ntries=5,smooth=0.02,lower=0,upper=c(0,1)))
Error : in ‘bsmc’: parameter(s) ‘alpha.2’ in column 1 in ‘params’ is/are outside the box defined by ‘lower’ and ‘upper’
> try(bsmc(ou2,params=prior,est=estnames,ntries=5,smooth=0.02,lower=-100,upper=c(111,33,222)))
Error : in ‘bsmc’: ‘lower’ and ‘upper’ must each have length 1 or length equal to that of ‘est’
> 
> smc <- bsmc(ou2,params=prior,est=estnames,ntries=5,smooth=0.02,
+             lower=prior.bounds[estnames,"lower"],
+             upper=prior.bounds[estnames,"upper"]
+             )
> prior <- smc$prior
> post <- smc$post
> print(min(smc$eff.sample.size))
[1] 11
> print(smc$log.evidence)
[1] 45
> 
> ou2 <- pomp(ou2,
+             rprior=function(params,...){
+               params
+             }
+             )
> 
> smc <- bsmc(ou2,ntries=5,Np=5000,smooth=0.1,est=estnames)
> smc <- bsmc(ou2,ntries=5,transform=TRUE,Np=5000,smooth=0.1,est=estnames)
> try(plot(smc,pars=c("george","gracie")))
Error : in ‘plot-bsmcd.pomp’: unrecognized parameters: ‘george’,‘gracie’
> print(smc$eff.sample.size)
 [1] 376.1  53.8  60.5  36.8 323.1   9.6 187.1   1.5  74.4  81.6
> print(smc$log.evidence)
[1] 40
> 
> smc <- bsmc(ou2,ntries=1,transform=TRUE,Np=2,smooth=0.01,est=estnames,
+             tol=1e-2,max.fail=100)
Warning message:
in ‘bsmc’: 1 filtering failure occurred. 
> 
> try(bsmc(pomp(ou2,dmeasure=function(y,x,t,params,log,...) stop("oof!")),
+          Np=100,est=c("alpha.1","alpha.2"),transform=TRUE,smooth=0.2))
Error : in ‘bsmc’: ‘dmeasure’ error: oof!
> neval <- 0
> try(bsmc(pomp(ou2,
+               dmeasure=function(y,x,t,params,log,...) {
+                   neval <<- neval+1
+                   if (neval>100) stop("oof!") else if (log) 0 else 1
+               }),
+          Np=100,est=c("alpha.1","alpha.2"),transform=TRUE,smooth=0.2))
Error : in ‘bsmc’: ‘dmeasure’ error: oof!
> 
> try(bsmc(ou2,Np=100,est=c("alpha.1","bob"),transform=TRUE,smooth=1))
Error : in ‘bsmc’: parameter(s) ‘bob’ not found.
> 
> dev.off()
null device 
          1 
> 
