
R version 4.0.0 (2020-04-24) -- "Arbor Day"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(digits=3)
> png(filename="blowflies-%02d.png",res=100)
> 
> library(pomp)
Welcome to pomp!
As of version 2.7.1.0, important changes have been made to the
default settings of the particle filtering algorithms in
'pfilter', 'mif2', 'pmcmc', 'bsmc2'.
These changes are not backward compatible.
See the package NEWS for the details.

For information on upgrading your pomp version < 2 code, see the
"pomp version 2 upgrade guide" at https://kingaa.github.io/pomp/.

> 
> capture.output(
+   list(blowflies1(),blowflies2()) -> flies,
+   type="message") -> out
> stopifnot(
+   sum(grepl("unrecognized argument",out))==2,
+   sum(grepl("y.init",out))==2
+ )
> 
> set.seed(599688L)
> 
> plot(flies[[1]])
> rinit(flies[[1]])
        rep
variable [,1]
     N1   397
     N2   450
     N3   504
     N4   590
     N5   676
     N6   738
     N7   801
     N8   830
     N9   858
     N10  884
     N11  911
     N12  926
     N13  942
     N14  945
     N15  948
     R      0
     S      0
     e      0
     eps    0
> coef(flies[[1]])
       P    delta       N0  sigma.P  sigma.d  sigma.y 
  3.2838   0.1607 679.9400   1.3512   0.7468   0.0266 
> plot(simulate(flies[[1]],seed=599688L),var=c("y","R","S","N15"))
> pf <- freeze(pfilter(flies[[1]],Np=1000),seed=599688L)
> plot(pf)
> stopifnot(
+   all.equal(
+     partrans(
+       flies[[1]],
+       partrans(flies[[1]],dir="to",coef(flies[[1]])),
+       dir="from"
+     ),
+     coef(flies[[1]])
+   )
+ )
> 
> set.seed(1598688L)
> plot(flies[[2]])
> rinit(flies[[2]])
        rep
variable [,1]
     N1   397
     N2   504
     N3   676
     N4   801
     N5   858
     N6   911
     N7   942
     N8   948
     R      0
     S      0
     e      0
     eps    0
> coef(flies[[2]])
       P    delta       N0  sigma.P  sigma.d  sigma.y 
  2.7319   0.1738 800.3100   1.4420   0.7603   0.0108 
> plot(simulate(flies[[2]],seed=599688L),var=c("y","R","S","N8"))
> pf <- freeze(pfilter(flies[[2]],Np=1000),seed=599688L)
> plot(pf)
> stopifnot(
+   all.equal(
+     partrans(
+       flies[[2]],
+       partrans(flies[[2]],dir="to",coef(flies[[2]])),
+       dir="from"
+     ),
+     coef(flies[[2]]
+     )
+   )
+ )
> 
> dev.off()
null device 
          1 
> 
