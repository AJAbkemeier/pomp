
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> 
> png(filename="demos-%02d.png",res=100)
> 
> set.seed(47575684L)
> 
> demos <- list.files(path=system.file("demo",package="pomp"),
+                     pattern=".\\.R$",
+                     full.names=TRUE)
> 
> for (d in demos) {
+   print(system.time(source(d,local=TRUE,echo=TRUE)))
+ }

> library(pomp)

> library(ggplot2)

> library(magrittr)

> gompertz <- simulate(times = 1:100, t0 = 0, params = c(K = 1, 
+     r = 0.1, sigma = 0.1, tau = 0.1, X.0 = 1), rprocess = discrete.time.sim(step.fu .... [TRUNCATED] 

> Gompertz <- simulate(times = 0:100, t0 = 0, params = c(K = 1, 
+     r = 0.1, sigma = 0.1, tau = 0.1, X.0 = 1), dmeasure = Csnippet("\n    lik = dln ..." ... [TRUNCATED] 

> p <- parmat(coef(Gompertz), nrep = 4)

> p["X.0", ] <- c(0.5, 0.9, 1.1, 1.5)

> X <- trajectory(Gompertz, params = p, as.data.frame = TRUE)

> X %>% ggplot(aes(x = time, y = X, group = traj, color = traj)) + 
+     geom_line() + theme_bw() + labs(title = "Gompertz model", 
+     subtitle =  .... [TRUNCATED] 

> x <- simulate(Gompertz, params = p, as.data.frame = TRUE)

> x %>% ggplot(aes(x = time, y = X, group = sim, color = sim)) + 
+     geom_line() + theme_bw() + labs(title = "Gompertz model", 
+     subtitle = "s ..." ... [TRUNCATED] 

> pf <- replicate(n = 10, pfilter(Gompertz, Np = 500))

> print(logmeanexp(sapply(pf, logLik), se = TRUE))
                     se 
75.25036908  0.08779528 
   user  system elapsed 
  1.256   0.064   1.377 

> library(pomp)

> library(magrittr)

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


> library(ggplot2)

> po <- simulate(times = seq(0.1, by = 0.1, length = 1000), 
+     t0 = 0, params = c(n_0 = 10000, K = 10000, r = 0.9, sigma = 0.4, 
+         tau = 0 .... [TRUNCATED] 

> params <- cbind(c(n_0 = 100, K = 10000, r = 0.2, sigma = 0.4, 
+     tau = 0.1), c(n_0 = 100, K = 20000, r = 0.1, sigma = 0.4, 
+     tau = 0.1), c( .... [TRUNCATED] 

> traj <- po %>% trajectory(params = params, as.data.frame = TRUE) %>% 
+     rename(rep = traj) %>% mutate(type = "deterministic")

> sim <- po %>% simulate(params = params, as.data.frame = TRUE, 
+     seed = 34597368, states = TRUE) %>% rename(rep = sim) %>% 
+     mutate(type =  .... [TRUNCATED] 

> rbind(traj, sim) %>% ggplot(aes(x = time, y = n, group = interaction(rep, 
+     type), color = type)) + geom_line() + theme_bw() + labs(title = "Lo ..." ... [TRUNCATED] 
   user  system elapsed 
  0.336   0.040   0.434 

> library(pomp)

> library(magrittr)

> rw2 <- simulate(times = seq(1, 100), t0 = 0, params = c(s1 = 3, 
+     s2 = 1, x1.0 = 0, x2.0 = 1, tau = 10), rprocess = onestep.sim(step.fun = Csni .... [TRUNCATED] 

> plot(rw2)

> pf <- pfilter(rw2, Np = 1000)

> logLik(pf)
[1] -757.0675

> plot(pf)
   user  system elapsed 
  0.180   0.052   0.289 

> library(pomp)

> rmeas <- "\n  cases = rnbinom_mu(theta,rho*incid);\n"

> globals <- "\n  static int nbasis = 3;\n"

> step.fun <- "\n  double rate[6];\t\t// transition rates\n  double trans[6];\t// transition numbers\n  double beta;\t\t\t// transmission rate\n  doub ..." ... [TRUNCATED] 

> skel <- "\n  double rate[6];\t\t// transition rates\n  double term[6];\t\t// transition numbers\n  double beta;\t\t\t// transmission rate\n  int k;\ ..." ... [TRUNCATED] 

> initlzr <- "\n  double m = popsize/(S_0+I_0+R_0);\n  S = nearbyint(m*S_0);\n  I = nearbyint(m*I_0);\n  R = nearbyint(m*R_0);\n  incid = 0;\n  W = 0; ..." ... [TRUNCATED] 

> po <- pomp(data = subset(LondonYorke, subset = town == 
+     "New York" & disease == "measles" & year >= 1928 & year <= 
+     1933, select = c(tim .... [TRUNCATED] 

> X <- trajectory(po, hmax = 1/52, as.data.frame = TRUE)

> plot(incid ~ time, data = X, type = "l")

> x <- simulate(po, nsim = 3, as.data.frame = TRUE)

> plot(incid ~ time, data = x, col = as.factor(x$sim), 
+     pch = 16)

> po <- pomp(po, dmeasure = Csnippet("\n  lik = dnbinom_mu(cases,theta,rho*incid,give_log);\n"), 
+     statenames = c("S", "I", "R", "incid", "W"), p .... [TRUNCATED] 

> logLik(pfilter(po, Np = 1000))
[1] -671.6956
   user  system elapsed 
  6.708   0.072   6.888 
Warning messages:
1: in 'table_lookup': extrapolating at 1.934011e+03 
2: in 'table_lookup': extrapolating at 1.934011e+03 
> 
> dev.off()
null device 
          1 
> 
