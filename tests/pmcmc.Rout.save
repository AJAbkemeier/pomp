
R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> library(reshape2)
> library(plyr)
> library(magrittr)
> 
> set.seed(1178744046L)
> 
> pompExample(ou2)
newly created object(s):
 ou2 
> 
> dprior.ou2 <- function (params, log, ...) {
+   f <- sum(dunif(params,min=coef(ou2)-1,max=coef(ou2)+1,log=TRUE))
+   if (log) f else exp(f)
+ }
> 
> pdf(file="pmcmc.pdf")
> 
> pmcmc(
+       pomp(ou2,dprior=dprior.ou2),
+       Nmcmc=20,
+       proposal=mvn.diag.rw(c(alpha.2=0.001,alpha.3=0.001)),
+       Np=100,
+       verbose=FALSE
+       ) %>%
+   continue(Nmcmc=20) -> f1
> f1 %>% plot()
> 
> f1 %>% pfilter() %>%
+ pmcmc(
+       Nmcmc=20,
+       proposal=mvn.diag.rw(c(alpha.2=0.01,alpha.3=0.01)),
+       max.fail=100, 
+       verbose=FALSE
+       ) -> f2
> 
> f2 %>% pmcmc() -> f3
> f3 %>% continue(Nmcmc=20) -> f4
> 
> plot(c(f2,f3))
> 
> try(ff <- c(f3,f4))
Error in validObject(.Object) : 
  invalid class “pmcmcList” object: error in ‘c’: to be combined, ‘pmcmc’ objects must have chains of equal length
> 
> if (Sys.getenv("FULL_TESTS")=="yes") {
+   f2a <- pmcmc(f1,Nmcmc=1000,Np=100,verbose=FALSE)
+   plot(f2a)
+   runs <- rle(as.numeric(conv.rec(f2a,'loglik')))$lengths
+   plot(sort(runs))
+   acf(conv.rec(f2a,c("alpha.2","alpha.3")))
+ }
> 
> ou2 %>%
+   pomp(dprior=function (params, log, ...) {
+     f <- sum(dnorm(params,mean=coef(ou2),sd=1,log=TRUE))
+     if (log) f else exp(f)
+   }) %>%
+ pmcmc(
+       Nmcmc=20,
+       proposal=mvn.diag.rw(c(alpha.2=0.001,alpha.3=0.001)),
+       Np=100,
+       verbose=FALSE
+       ) -> f5
> f5 %>% continue(Nmcmc=20) -> f6
> plot(f6)
> 
> ff <- c(f4,f6)
> plot(ff)
> plot(conv.rec(ff,c("alpha.2","alpha.3","loglik")))
> 
> ff <- c(f2,f3)
> 
> try(ff <- c(ff,f4,f6))
Error in validObject(.Object) : 
  invalid class “pmcmcList” object: error in ‘c’: to be combined, ‘pmcmc’ objects must have chains of equal length
> try(ff <- c(f4,ou2))
Error in c(f4, ou2) : cannot mix ‘pmcmc’ and non-‘pmcmc’ objects
> try(ff <- c(ff,ou2))
Error in c(ff, ou2) : cannot mix ‘pmcmc’ and non-‘pmcmc’ objects
> 
> plot(ff <- c(ff,f5))
> print(signif(covmat(ff),2))
Error in unique.default(c("alpha.2", "alpha.3"), c("alpha.2", "alpha.3" : 
  'fromLast' must be TRUE or FALSE
Calls: print ... covmat -> .local -> do.call -> <Anonymous> -> unique.default
Execution halted
