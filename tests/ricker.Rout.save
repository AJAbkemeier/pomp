
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> 
> pompExample(ricker)
newly created object(s):
 ricker 
> 
> pdf(file="ricker.pdf")
> 
> tj.1 <- trajectory(ricker)
> plot(time(ricker),tj.1[1,,],type='l')
> tj.2 <- trajectory(ricker,times=c(30:50),t0=0)
> lines(30:50,tj.2[1,,],col='red',lwd=2)
> stopifnot(max(abs(tj.1[,,time(ricker)>=30]-tj.2[,,]))==0)
> 
> tj.3 <- trajectory(ricker,as.data.frame=TRUE)
> plot(tj.3)
> tj.3 <- trajectory(ricker,as.data.frame=TRUE,params=parmat(coef(ricker),3),times=1:100)
> plot(N~time,data=tj.3,subset=traj==3,type='l')
> 
> sm <- as.data.frame(simulate(ricker,seed=343995))
> sm1 <- simulate(ricker,seed=343995,as.data.frame=TRUE)
> stopifnot(max(abs(as.matrix(sm1[names(sm)])-as.matrix(sm)))==0)
> sm1 <- simulate(ricker,seed=343995,states=TRUE,obs=TRUE,as.data.frame=TRUE)
> stopifnot(max(abs(as.matrix(sm1[names(sm)])-as.matrix(sm)))==0)
> 
> sm1 <- simulate(ricker,nsim=3,seed=343995,as.data.frame=TRUE)
> stopifnot(all(names(sm1)==c("time","y","N","e","sim")))
> stopifnot(all(dim(sm1)==c(153,5)))
> 
> sm1 <- simulate(ricker,nsim=3,states=T,seed=343995,as.data.frame=TRUE)
> stopifnot(all(names(sm1)==c("N","e","sim","time")))
> stopifnot(all(dim(sm1)==c(153,4)))
> 
> sm1 <- simulate(ricker,nsim=3,obs=T,seed=343995,as.data.frame=TRUE)
> stopifnot(all(names(sm1)==c("y","sim","time")))
> stopifnot(all(dim(sm1)==c(153,3)))
> 
> po <- ricker
> try(
+     coef(po,"log.r")
+     )
Error : in ‘coef’: name(s) ‘log.r’ correspond to no parameter(s)
> coef(po,c("r","phi")) <- c(0,0)
> coef(po,c("r","phi")) <- c(a=0,b=1)
Warning message:
in ‘coef<-’:  names of ‘value’ are being discarded 
> coef(po,c("r","phi")) <- 1
> coef(po) <- c(phi=1,r=3.5,N.0=10,e.0=0,sigma=0)
> coef(po)
  phi     r   N.0   e.0 sigma 
  1.0   3.5  10.0   0.0   0.0 
> coef(po,"new") <- 3
Warning message:
in ‘coef<-’: name(s) ‘new’ do not refer to existing parameter(s); they are being concatenated 
> plot(simulate(po))
> coef(po)
  phi     r   N.0   e.0 sigma   new 
  1.0   3.5  10.0   0.0   0.0   3.0 
> 
> pomp(ricker,
+      rprocess=discrete.time.sim(
+          Csnippet("if (runif(0,1)<0.5) error(\"yow!\");")),
+      skeleton=map(Csnippet("error(\"yipes!\");"))
+      ) -> po
> try(simulate(po))
Error : in ‘simulate’: in ‘discrete.time.sim’ plugin: yow!
> try(pfilter(po,Np=1000))
Error : in ‘pfilter’: process simulation error: in ‘discrete.time.sim’ plugin: yow!
> try(mif(po,Np=1000,Nmif=2,cooling.fraction.50=0.5,rw.sd=c(r=0.1)))
Error : in ‘mif’: in ‘mif.pfilter’: process simulation error: in ‘discrete.time.sim’ plugin: yow!
> try(mif2(po,Np=1000,Nmif=2,cooling.fraction.50=0.5,rw.sd=c(r=0.1)))
Error : in ‘mif2’: in ‘mif2.pfilter’: process simulation error: in ‘discrete.time.sim’ plugin: yow!
> try(trajectory(po))
Error : in ‘trajectory’: in map iterator: yipes!
> try(probe(po,probes=list(mean=probe.mean("y"))))
Error : in ‘probe’: applying probes to simulated data: in ‘simulate’: in ‘discrete.time.sim’ plugin: yow!
> try(spect(po,kernel.width=3,nsim=c(100,0)))
Error : in ‘spect’: simulation error: in ‘simulate’: in ‘discrete.time.sim’ plugin: yow!
In addition: Warning message:
in 'simulate': only the first number in 'nsim' is significant 
> 
> pomp(ricker,skeleton=NULL) -> po
Warning message:
in ‘pomp’: the default ‘skeleton.type="map"’ is deprecated and will be removed in a future release.
See ‘?pomp’ for an explanation of the new syntax. 
> show(po)
51 records of 1 observables, recorded from t = 0 to 50 
summary of data:
       y         
 Min.   :  0.00  
 1st Qu.:  0.00  
 Median :  8.00  
 Mean   : 41.39  
 3rd Qu.: 71.00  
 Max.   :275.00  
zero time, t0 = 0
process model simulator, rprocess = function (xstart, times, params, ..., zeronames = character(0), 
    tcovar, covar, .getnativesymbolinfo = TRUE) 
{
    tryCatch(.Call(euler_model_simulator, func = efun, xstart = xstart, 
        times = times, params = params, deltat = object@delta.t, 
        method = 2L, zeronames = zeronames, tcovar = tcovar, 
        covar = covar, args = pairlist(...), gnsi = .getnativesymbolinfo), 
        error = function(e) {
            stop(ep, conditionMessage(e), call. = FALSE)
        })
}
<environment: 0x2c5adb0>
process model density, dprocess = function (x, times, params, log = FALSE, ...) 
stop(sQuote("dprocess"), " not specified", call. = FALSE)
<environment: 0x3685570>
measurement model simulator, rmeasure = native function ‘_ricker_poisson_rmeasure’, dynamically loaded from ‘pomp’
measurement model density, dmeasure = native function ‘_ricker_poisson_dmeasure’, dynamically loaded from ‘pomp’
prior simulator, rprior = not specified
prior density, dprior = native function ‘_pomp_default_dprior’, dynamically loaded from ‘pomp’
skeleton = not specified
initializer = not specified
parameter transformation (to estimation scale) = function (params, ...) 
{
    params[c("r", "sigma", "phi", "N.0")] <- log(params[c("r", 
        "sigma", "phi", "N.0")])
    params
}
<environment: 0x3997d18>
parameter transformation (from estimation scale) = function (params, ...) 
{
    params[c("r", "sigma", "phi", "N.0")] <- exp(params[c("r", 
        "sigma", "phi", "N.0")])
    params
}
<environment: 0x3997d18>
parameter(s):
       r    sigma      phi      N.0      e.0 
44.70118  0.30000 10.00000  7.00000  0.00000 
> try(trajectory(po))
Error : in ‘trajectory’: deterministic skeleton has not been specified
> 
> pomp(ricker,
+      rmeasure=Csnippet("if (runif(0,1)<0.5) error(\"yikes!\");")
+      ) -> po
> try(simulate(po))
Error : in ‘simulate’: yikes!
> try(probe(po,probes=list(mean=probe.mean("y"))))
Error : in ‘probe’: applying probes to simulated data: in ‘simulate’: yikes!
> try(spect(po,kernel.width=3,nsim=100))
Error : in ‘spect’: simulation error: in ‘simulate’: yikes!
> 
> pomp(ricker,
+      dmeasure=Csnippet("error(\"oof!\");")
+      ) -> po
> try(pfilter(po,Np=1000))
Error : in ‘pfilter’: error in calculation of weights: oof!
> try(mif(po,Np=1000,Nmif=2,cooling.fraction.50=0.5,rw.sd=c(r=0.1)))
Error : in ‘mif’: in ‘mif.pfilter’: error in calculation of weights.oof!
> try(mif2(po,Np=1000,Nmif=2,cooling.fraction.50=0.5,rw.sd=c(r=0.1)))
Error : in ‘mif2’: in ‘mif2.pfilter’: error in calculation of weights: oof!
> 
> try(
+     simulate(
+         pomp(ricker,
+              rprocess = discrete.time.sim(
+                  Csnippet("e = rnorm(0,sigma);
+                        N = r*N*exp(1-N+e);"),
+                  delta.t = 0),
+              statenames=c("e","N"),
+              paramnames=c("r","sigma"))))
Error : in ‘simulate’: in ‘discrete.time.sim’ plugin: 'delta.t' should be a positive number
> 
> try(rprocess(ricker,xstart=init.state(ricker),params=coef(ricker),times=runif(10,max=5)))
Error : in ‘discrete.time.sim’ plugin: 'times' is not an increasing sequence
> 
> dev.off()
null device 
          1 
> 
