
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> 
> pompExample(ricker)
newly created object(s):
 ricker 
> 
> pdf(file="ricker.pdf")
> 
> tj.1 <- trajectory(ricker)
> plot(time(ricker),tj.1[1,,],type='l')
> tj.2 <- trajectory(ricker,times=c(30:50),t0=0)
> lines(30:50,tj.2[1,,],col='red',lwd=2)
> stopifnot(max(abs(tj.1[,,time(ricker)>=30]-tj.2[,,]))==0)
> 
> tj.3 <- trajectory(ricker,as.data.frame=TRUE)
> plot(tj.3)
> tj.3 <- trajectory(ricker,as.data.frame=TRUE,params=parmat(coef(ricker),3),times=1:100)
> plot(N~time,data=tj.3,subset=traj==3,type='l')
> 
> sm <- as.data.frame(simulate(ricker,seed=343995))
> sm1 <- simulate(ricker,seed=343995,as.data.frame=TRUE)
> stopifnot(max(abs(as.matrix(sm1[names(sm)])-as.matrix(sm)))==0)
> sm1 <- simulate(ricker,seed=343995,states=TRUE,obs=TRUE,as.data.frame=TRUE)
> stopifnot(max(abs(as.matrix(sm1[names(sm)])-as.matrix(sm)))==0)
> 
> sm1 <- simulate(ricker,nsim=3,seed=343995,as.data.frame=TRUE)
> stopifnot(all(names(sm1)==c("time","y","N","e","sim")))
> stopifnot(all(dim(sm1)==c(153,5)))
> 
> sm1 <- simulate(ricker,nsim=3,states=T,seed=343995,as.data.frame=TRUE)
> stopifnot(all(names(sm1)==c("N","e","sim","time")))
> stopifnot(all(dim(sm1)==c(153,4)))
> 
> sm1 <- simulate(ricker,nsim=3,obs=T,seed=343995,as.data.frame=TRUE)
> stopifnot(all(names(sm1)==c("y","sim","time")))
> stopifnot(all(dim(sm1)==c(153,3)))
> 
> try(simulate(ricker,params=c()))
Error : in ‘simulate’: no ‘params’ specified
> 
> po <- ricker
> try(
+     coef(po,"log.r")
+     )
Error : in ‘coef’: name(s) ‘log.r’ correspond to no parameter(s)
> coef(po,c("r","phi")) <- c(0,0)
> coef(po,c("r","phi")) <- c(a=0,b=1)
Warning message:
in ‘coef<-’:  names of ‘value’ are being discarded 
> coef(po,c("r","phi")) <- 1
> coef(po) <- c(phi=1,r=3.5,N.0=10,e.0=0,sigma=0,c=1)
> coef(po)
  phi     r   N.0   e.0 sigma     c 
  1.0   3.5  10.0   0.0   0.0   1.0 
> coef(po,"new") <- 3
Warning message:
in ‘coef<-’: name(s) ‘new’ do not refer to existing parameter(s); they are being concatenated 
> plot(simulate(po))
> coef(po)
  phi     r   N.0   e.0 sigma     c   new 
  1.0   3.5  10.0   0.0   0.0   1.0   3.0 
> 
> file.create("bob")
[1] TRUE
> try(
+     pomp(ricker,
+          rprocess=discrete.time.sim(
+              Csnippet("if (runif(0,1)<0.5) error(\"yow!\");")),
+          skeleton=map(Csnippet("error(\"yipes!\");")),
+          cdir="bob"
+          )
+     )
Error : in ‘pomp’: in ‘pomp’: error in building shared-object library from C snippets: in ‘pompCBuilder’: compilation error: cannot create cache directory ‘bob’
> file.remove("bob")
[1] TRUE
> pomp(ricker,
+   rprocess=discrete.time.sim(
+     Csnippet("if (runif(0,1)<0.5) error(\"yow!\");")),
+   skeleton=map(Csnippet("error(\"yipes!\");"))
+ ) -> po
> try(simulate(po))
Error : in ‘simulate’: in ‘discrete.time.sim’ plugin: yow!
> try(pfilter(po,Np=1000))
Error : in ‘pfilter’: process simulation error: in ‘discrete.time.sim’ plugin: yow!
> try(mif(po,Np=1000,Nmif=2,cooling.fraction.50=0.5,rw.sd=c(r=0.1)))
Error : in ‘mif’: in ‘mif.pfilter’: process simulation error: in ‘discrete.time.sim’ plugin: yow!
> try(mif2(po,Np=1000,Nmif=2,cooling.fraction.50=0.5,rw.sd=rw.sd(r=0.1)))
Error : in ‘mif2’: in ‘mif2.pfilter’: process simulation error: in ‘discrete.time.sim’ plugin: yow!
> try(trajectory(po))
Error : in ‘trajectory’: in map iterator: yipes!
> try(probe(po,probes=list(mean=probe.mean("y"))))
Error : in ‘probe’: applying probes to simulated data: in ‘simulate’: in ‘discrete.time.sim’ plugin: yow!
> try(spect(po,kernel.width=3,nsim=c(100,0)))
Error : in ‘spect’: simulation error: in ‘simulate’: in ‘discrete.time.sim’ plugin: yow!
In addition: Warning message:
in 'simulate': only the first number in 'nsim' is significant 
> try(pomp(ricker,skeleton=map(function(x,t,params,...)x,delta.t=-1)))
Error : in ‘map’, ‘delta.t’ must be positive
> try(pomp(as.data.frame(ricker),times="time",t0=0,
+   skeleton=map(function(x,t,params,...)x,delta.t=-1)))
Error : in ‘map’, ‘delta.t’ must be positive
> try(pomp(as.data.frame(ricker),times="time",t0=0,
+   covar=data.frame(z=c(1,2,3),t=c(1,2,3)),tcovar="t",
+   skeleton=map(function(x,t,params,...)x,delta.t=1),
+   rmeasure=function(x,t,params,...)x,
+   dmeasure=function(x,y,t,params,log,...)1))
51 records of 1 observables, recorded from t = 0 to 50 
summary of data:
       y         
 Min.   :  0.00  
 1st Qu.:  0.00  
 Median :  8.00  
 Mean   : 41.39  
 3rd Qu.: 71.00  
 Max.   :275.00  
zero time, t0 = 0
3 records of 1 covariates, recorded from t = 1 to 3 
summary of covariates:
       z      
 Min.   :1.0  
 1st Qu.:1.5  
 Median :2.0  
 Mean   :2.0  
 3rd Qu.:2.5  
 Max.   :3.0  
process model simulator, rprocess = function (xstart, times, params, ...) 
stop(sQuote("rprocess"), " not specified", call. = FALSE)
<bytecode: 0x4509818>
<environment: 0x3ff7fb0>
process model density, dprocess = function (x, times, params, log = FALSE, ...) 
stop(sQuote("dprocess"), " not specified", call. = FALSE)
<bytecode: 0x4509460>
<environment: 0x3ff7fb0>
measurement model simulator, rmeasure = function (x, t, params, ...) 
x
measurement model density, dmeasure = function (x, y, t, params, log, ...) 
1
prior simulator, rprior = not specified
prior density, dprior = native function ‘_pomp_default_dprior’, dynamically loaded from ‘pomp’
skeleton (map) = function (x, t, params, ...) 
x
<environment: 0x3ff6aa0>
initializer = not specified
parameter transformation (to estimation scale) = not specified
parameter transformation (from estimation scale) = not specified
parameter(s) unspecified
Warning messages:
1: in ‘pomp’: a covariate table has been given, yet the ‘skeleton’ function does not have ‘covars’ as a formal argument: see ‘?pomp’ 
2: in ‘pomp’: a covariate table has been given, yet the ‘rmeasure’ function does not have ‘covars’ as a formal argument: see ‘?pomp’ 
3: in ‘pomp’: a covariate table has been given, yet the ‘dmeasure’ function does not have ‘covars’ as a formal argument: see ‘?pomp’ 
4: in ‘pomp’: the supplied covariate covariate times ‘tcovar’ do not embrace the data times: covariates may be extrapolated 
> try(pomp(ricker,measurement.model=3))
Error : in ‘pomp’: ‘measurement.model’ takes formulae as arguments
> try(pomp(ricker,measurement.model=list()))
Error : in ‘pomp’: to use ‘measurement.model’ you must provide at least one formula
> pomp(ricker,skeleton=NULL) -> po
> show(po)
51 records of 1 observables, recorded from t = 0 to 50 
summary of data:
       y         
 Min.   :  0.00  
 1st Qu.:  0.00  
 Median :  8.00  
 Mean   : 41.39  
 3rd Qu.: 71.00  
 Max.   :275.00  
zero time, t0 = 0
process model simulator, rprocess = function (xstart, times, params, ..., zeronames = character(0), 
    tcovar, covar, .getnativesymbolinfo = TRUE) 
{
    tryCatch(.Call(euler_model_simulator, func = efun, xstart = xstart, 
        times = times, params = params, deltat = object@delta.t, 
        method = 2L, zeronames = zeronames, tcovar = tcovar, 
        covar = covar, args = pairlist(...), gnsi = .getnativesymbolinfo), 
        error = function(e) {
            stop(ep, conditionMessage(e), call. = FALSE)
        })
}
<bytecode: 0x30b6ce0>
<environment: 0x33a6880>
process model density, dprocess = function (x, times, params, log = FALSE, ...) 
stop(sQuote("dprocess"), " not specified", call. = FALSE)
<bytecode: 0x4509460>
<environment: 0x450f5e8>
measurement model simulator, rmeasure = native function ‘_ricker_poisson_rmeasure’, dynamically loaded from ‘pomp’
measurement model density, dmeasure = native function ‘_ricker_poisson_dmeasure’, dynamically loaded from ‘pomp’
prior simulator, rprior = not specified
prior density, dprior = native function ‘_pomp_default_dprior’, dynamically loaded from ‘pomp’
skeleton = not specified
initializer = not specified
parameter transformation (to estimation scale) = function (params, ...) 
{
    params[c("r", "sigma", "phi", "c", "N.0")] <- log(params[c("r", 
        "sigma", "phi", "c", "N.0")])
    params
}
<environment: 0x42bd5b0>
parameter transformation (from estimation scale) = function (params, ...) 
{
    params[c("r", "sigma", "phi", "c", "N.0")] <- exp(params[c("r", 
        "sigma", "phi", "c", "N.0")])
    params
}
<environment: 0x42bd5b0>
parameter(s):
       r    sigma      phi        c      N.0      e.0 
44.70118  0.30000 10.00000  1.00000  7.00000  0.00000 
> try(trajectory(po))
Error : in ‘trajectory’: deterministic skeleton has not been properly specified
> 
> pomp(ricker,
+      rmeasure=Csnippet("if (runif(0,1)<0.5) error(\"yikes!\");")
+      ) -> po
> try(simulate(po))
Error : in ‘simulate’: yikes!
> try(probe(po,probes=list(mean=probe.mean("y"))))
Error : in ‘probe’: applying probes to simulated data: in ‘simulate’: yikes!
> try(spect(po,kernel.width=3,nsim=100))
Error : in ‘spect’: simulation error: in ‘simulate’: yikes!
> 
> pomp(ricker,
+      dmeasure=Csnippet("error(\"oof!\");")
+      ) -> po
> try(pfilter(po,Np=1000))
Error : in ‘pfilter’: error in calculation of weights: oof!
> try(mif(po,Np=1000,Nmif=2,cooling.fraction.50=0.5,rw.sd=c(r=0.1)))
Error : in ‘mif’: in ‘mif.pfilter’: error in calculation of weights.oof!
> try(mif2(po,Np=1000,Nmif=2,cooling.fraction.50=0.5,rw.sd=rw.sd(r=0.1)))
Error : in ‘mif2’: in ‘mif2.pfilter’: error in calculation of weights: oof!
> 
> try(
+     simulate(
+         pomp(ricker,
+              rprocess = discrete.time.sim(
+                  Csnippet("e = rnorm(0,sigma);
+                        N = r*N*exp(1-N+e);"),
+                  delta.t = 0),
+              statenames=c("e","N"),
+              paramnames=c("r","sigma"))))
Error : in ‘simulate’: in ‘discrete.time.sim’ plugin: 'delta.t' should be a positive number
> 
> try(rprocess(ricker,xstart=init.state(ricker),params=coef(ricker),times=runif(10,max=5)))
Error : in ‘discrete.time.sim’ plugin: 'times' is not an increasing sequence
> try(simulate(ricker,params=c(r=1.5)))
Error : in ‘simulate’: in default 'initializer': there are no parameters with suffix '.0'. See '?pomp'.
> try(simulate(ricker,params=c(r=1.5,sigma=0.1,N.0=1,e.0=0,c=1)))
Error : in ‘simulate’: in ‘discrete.time.sim’ plugin: variable 'phi' not found among the parameters
> try(simulate(ricker,params=c(r=1.5,phi=1,N.0=1,e.0=0,c=1)))
Error : in ‘simulate’: in ‘discrete.time.sim’ plugin: variable 'sigma' not found among the parameters
> try(simulate(pomp(ricker,initializer=Csnippet("N = N_0; e = 0;"),
+                   statenames=c("N","e"),paramnames=c("N_0")),
+                   params=c(r=1.5,sigma=0.1,phi=1,c=1)))
Error : in ‘simulate’: variable 'N_0' not found among the parameters
> try(simulate(pomp(ricker,initializer=Csnippet("m = N_0; e = 0;"),
+                   statenames=c("m","e"),paramnames=c("N_0"),
+                   params=c(r=1.5,sigma=0.1,phi=1,N_0=1,c=1))))
Error : in ‘simulate’: in ‘discrete.time.sim’ plugin: variable 'N' not found among the state variables
> try(simulate(pomp(ricker,rmeasure=Csnippet("z = rpois(phi*N);"),
+                   statenames=c("N"),obsnames=c("z"),paramnames=c("phi")),
+                   params=c(r=1.5,sigma=0.1,phi=1,N.0=1,e.0=0,c=1)))
Error : in ‘simulate’: variable 'z' not found among the observables
> 
> dev.off()
null device 
          1 
> 
