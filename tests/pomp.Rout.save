
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(digits=3)
> 
> library(pomp)
> library(magrittr)
> 
> try(pomp())
Error : in ‘pomp’: ‘data’ is a required argument.
> try(pomp("bob"))
Error : in ‘pomp’: ‘data’ must be a data frame or an object of class ‘pomp’.
> try(pomp(times=3))
Error : in ‘pomp’: ‘data’ is a required argument.
> stopifnot(is.null(pomp(NULL)))
> try(data.frame(a=1:10,a=1:10,check.names=FALSE) %>% pomp(t0=4))
Error : in ‘pomp’: names of data variables must be unique.
> try(data.frame(a=1:10,b=1:10) %>% pomp(t0=4))
Error : in ‘pomp’: ‘times’ is a required argument
> try(data.frame(a=1:10,b=1:10) %>% pomp(times="b"))
Error : in ‘pomp’: ‘t0’ must be specified as a single number not greater than ‘times[1]’.
> try(data.frame(a=10:1,b=1:10) %>% pomp(times="a",t0=0))
Error : in ‘pomp’: ‘times’ must be specified as an increasing sequence of numbers.
> try(data.frame(a=1:10,b=1:10) %>% pomp(covar=1:20))
Error : in ‘pomp’: if one of ‘covar’, ‘tcovar’ is supplied, then so must the other
> try(data.frame(a=1:10,b=1:10) %>% pomp(tcovar=1:20))
Error : in ‘pomp’: if one of ‘covar’, ‘tcovar’ is supplied, then so must the other
> try(data.frame(a=1:10,b=1:10) %>% pomp(tcovar=1:20,covar=1:20))
Error : in ‘pomp’: ‘times’ is a required argument
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times=1:10))
Error : in ‘pomp’: when ‘data’ is a data frame, ‘times’ must identify a single column of ‘data’ either by name or by index.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times=1))
Error : in ‘pomp’: ‘t0’ must be specified as a single number not greater than ‘times[1]’.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times=1,t0=11))
Error : in ‘pomp’: ‘t0’ must be specified as a single number not greater than ‘times[1]’.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times=1,t0=NULL))
Error : in ‘pomp’: ‘t0’ must be specified as a single number not greater than ‘times[1]’.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times=1,t0=NA))
Error : in ‘pomp’: ‘t0’ must be specified as a single number not greater than ‘times[1]’.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times=3,t0=0))
Error : in ‘pomp’: when ‘data’ is a data frame, ‘times’ must identify a single column of ‘data’ either by name or by index.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times="c",t0=0))
Error : in ‘pomp’: when ‘data’ is a data frame, ‘times’ must identify a single column of ‘data’ either by name or by index.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times=NA,t0=0))
Error : in ‘pomp’: when ‘data’ is a data frame, ‘times’ must identify a single column of ‘data’ either by name or by index.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times=NULL,t0=0))
Error : in ‘pomp’: when ‘data’ is a data frame, ‘times’ must identify a single column of ‘data’ either by name or by index.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:10,covar=data.frame(c=1:10,d=1:10),times=1,t0=0))
Error : in ‘pomp’: when ‘covar’ is a data frame, ‘tcovar’ must identify a single column of ‘covar’ either by name or by index.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1,covar=data.frame(c=1:10,d=1:10),
+       covarnames=c("e","f"),times=1,t0=0))
Error : in ‘pomp’: covariate(s) ‘e’,‘f’ are not among the columns of ‘covar’.
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1,covar=data.frame(c=1:10,d=1:10),
+       covarnames=c("c"),times=1,t0=0))
Error : in ‘pomp’: covariate(s) ‘c’ are not among the columns of ‘covar’.
> stopifnot(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1,covar=data.frame(c=0:10,d=0:10),
+       covarnames="d",times=1,t0=0,bob=3) %>% class() %>%
+     equals("pomp"))
in ‘pomp’: the following unrecognized argument(s) will be stored for use by user-defined functions: ‘bob’
> try(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1,
+       covar=data.frame(c=1:10,d=1:10,d=1:10,check.names=FALSE),
+       times=1,t0=0))
Error : in ‘pomp’: names of covariates must be unique.
> stopifnot(data.frame(a=1:10,b=1:10) %>%
+     pomp(tcovar=1:20,covar=1:20,times="a",t0=0) %>% class() %>%
+     equals("pomp"))
Warning message:
in ‘pomp’: the supplied covariate covariate times ‘tcovar’ do not embrace the data times: covariates may be extrapolated 
> try(simulate())
Error : in ‘simulate’: ‘times’ is a required argument.
> try(NULL %>% pomp(t0=4))
Error : in ‘pomp’: ‘times’ is a required argument.
> try(NULL %>%
+     pomp(tcovar=1:20,covar=1:20,times="a",t0=0))
Error : in ‘pomp’: ‘times’ must be specified as an increasing sequence of numbers.
> try(NULL %>%
+     pomp(tcovar=1:20,covar=1:20,times=1:10,t0=3))
Error : in ‘pomp’: ‘t0’ must be specified as a single number not greater than ‘times[1]’.
> try(NULL %>%
+     pomp(tcovar=1:20,covar=1:20,times=1:10,t0=1,rinit=3))
Error : in ‘pomp’: bad option for ‘rinit’ argument
> stopifnot(NULL %>% pomp(tcovar=1:20,covar=1:20,times=1:10,t0=1)
+   %>% class() %>% equals("pomp"))
> 
> pompExample(gompertz,envir=NULL) %>% extract2(1) -> po
> try(po %>% pomp(rprocess=NULL) %>% simulate())
Error : in ‘simulate’: 'rprocess' is undefined.
> po %>% pomp(rprocess=NULL) %>% slot("rprocess")
  - undefined
> po %>% pomp(skeleton=NULL) %>% slot("skeleton")
  - undefined
> po %>% pomp(partrans=NULL) %>% slot("partrans")
  - to estimation scale:
NULL
  - from estimation scale:
NULL
> stopifnot({
+   po %>% pomp(partrans=NULL) %>% coef(transform=TRUE) -> theta1
+   coef(po) -> theta2
+   theta1==theta2
+ },
+   po %>% pomp(times=1:5) %>% class() %>% equals("pomp"))
> 
> stopifnot(po %>%
+   pomp(rprocess=onestep.sim(function(x,t,params,delta.t,...)x),
+     skeleton=map(function(x,t,params,...)x),
+     rmeasure=function(x,t,params,...)3,
+     dmeasure=function(x,y,t,params,log,...)1,
+     covar=data.frame(a=1:20,b=1:20),tcovar="a") %>% class() %>%
+   equals("pomp"))
Warning messages:
1: in ‘pomp’: a covariate table has been given, yet the ‘skeleton’ function does not have ‘covars’ as a formal argument: see ‘?pomp’ 
2: in ‘pomp’: a covariate table has been given, yet the ‘rmeasure’ function does not have ‘covars’ as a formal argument: see ‘?pomp’ 
3: in ‘pomp’: a covariate table has been given, yet the ‘dmeasure’ function does not have ‘covars’ as a formal argument: see ‘?pomp’ 
4: in ‘pomp’: the supplied covariate covariate times ‘tcovar’ do not embrace the data times: covariates may be extrapolated 
> 
> try(po %>% pomp(times=3:1))
Error : in ‘time<-’: the times specified must be an increasing sequence.
> 
> try(po %>% pomp(rinit=Csnippet("X=3;")))
Error : in ‘pomp’: when ‘rinit’ is provided as a C snippet, you must also provide ‘statenames’.
> stopifnot(
+   po %>% pomp(rinit=Csnippet("X=3;"),statenames=c("X","Z")) %>%
+     class() %>% equals("pomp"))
> try(po %>% pomp(rprocess="bob"))
Error : in ‘pomp’: ‘rprocess’ must be specified using one of the plugins:
‘onestep.sim’, ‘discrete.time.sim’, ‘euler.sim’, ‘gillespie.sim’, or ‘gillespie.hl.sim’.
> try(po %>% pomp(skeleton="bob"))
Error : in ‘pomp’: ‘skeleton’ must be specified using either ‘map’ or ‘vectorfield’.
> try(po %>% pomp(partrans="bob"))
Error : in ‘pomp’: ‘partrans’ must be specified using ‘parameter_trans’.
> try(po %>% pomp(params=c(1,2,3)))
Error : in ‘pomp’: ‘params’ must be a named numeric vector.
> try(po %>% pomp(params=c(a=1,b=2,3)))
Error : in ‘pomp’: ‘params’ must be a named numeric vector.
> obs(window(po,start=3,end=5))
        time
variable    3     4     5
       Y 1.14 0.807 0.873
> try(obs(window(po,start=3,end=5),vars="Z"))
Error : in ‘obs’: some elements of ‘vars’ correspond to no observed variable
> states(po)
NULL
> simulate(window(po,start=3,end=5),seed=4358686) -> po1
> states(po1)
        time
variable    3 4    5
       X 0.97 1 1.19
> try(states(po1,vars="Z"))
Error : in ‘states’: some elements of ‘vars’ correspond to no state variable
> time(po1)
[1] 3 4 5
> time(po1,t0=TRUE)
[1] 0 3 4 5
> try(time(po1) <- c("bob","nancy"))
Error : in ‘time<-’: ‘value’ must be a numeric vector.
> time(po1) <- 4:7
> obs(po1)
        time
variable     4    5  6  7
       Y 0.963 1.25 NA NA
> try(time(po1,t0=TRUE) <- c(9,4:7))
Error : in ‘time<-’: the zero-time ‘t0’ must occur no later than the first observation.
> time(po1,t0=TRUE) <- c(1,4:7)
> try(window(po,start="3"))
Error : in ‘window’: ‘start’ and ‘end’ must be finite times.
> try(window(po,start=NA))
Error : in ‘window’: ‘start’ and ‘end’ must be finite times.
> try(window(po,end=NULL))
Error : in ‘window’: ‘start’ and ‘end’ must be finite times.
> try(window(po,end=FALSE))
Error : in ‘window’: ‘start’ and ‘end’ must be finite times.
> try(window(po,start=5,end=2))
Error : in ‘window’: ‘start’ must not be later than ‘end’.
> window(po1,start=6) %>% obs()
        time
variable  6  7
       Y NA NA
> try(timezero(po1) <- "bob")
Error : in ‘timezero<-’: the zero-time ‘t0’ must be a single finite number.
> try(timezero(po1) <- NULL)
Error : in ‘timezero<-’: the zero-time ‘t0’ must be a single finite number.
> try(timezero(po1) <- c(3,2))
Error : in ‘timezero<-’: the zero-time ‘t0’ must be a single finite number.
> try(timezero(po1) <- list(3))
Error : in ‘timezero<-’: the zero-time ‘t0’ must be a single finite number.
> try(timezero(po1) <- -Inf)
Error : in ‘timezero<-’: the zero-time ‘t0’ must be a single finite number.
> try(timezero(po1) <- 9)
Error : in ‘timezero<-’: the zero-time ‘t0’ must occur no later than the first observation.
> timezero(po1) <- 4
> 
> coef(po)
    K     r sigma   tau   X.0 
  1.0   0.1   0.1   0.1   1.0 
> coef(po,transform=TRUE)
    K     r sigma   tau   X.0 
  0.0  -2.3  -2.3  -2.3   0.0 
> coef(po,c("r","tau"))
  r tau 
0.1 0.1 
> try(coef(po,c("bob","tau")))
Error : in ‘coef’: name(s) ‘bob’ correspond to no parameter(s).
> try(coef(po) <- c(1,2,3))
Error : in ‘coef<-’: ‘value’ must be a named vector
> try(coef(po,transform=TRUE) <- c(1,2,3))
Error : in 'partrans': user transformation functions must return a named numeric vector
> coef(po) <- list(as.list(coef(po)))
> coef(po,"r") <- 0.2
> coef(po,"r") <- list(r=0.2)
Warning message:
in ‘coef<-’:  names of ‘value’ are being discarded 
> coef(po,c("r","theta")) <- list(r=0.2)
Warning messages:
1: in ‘coef<-’:  names of ‘value’ are being discarded 
2: in ‘coef<-’: name(s) ‘theta’ do not refer to existing parameter(s); they are being concatenated 
> coef(po,"sigma",transform=TRUE) <- 0
> coef(po)
    K     r sigma   tau   X.0 theta 
  1.0   0.2   1.0   0.1   1.0   0.2 
> coef(po1) <- NULL
> stopifnot(identical(coef(po1),numeric(0)))
> coef(po1,c("r","sigma")) <- 1
> stopifnot(all.equal(coef(po1),c(r=1,sigma=1)))
> coef(po1) <- NULL
> coef(po1,c("r","sigma"),transform=TRUE) <- 0
> stopifnot(all.equal(coef(po1),c(r=1,sigma=1)))
> coef(po1) <- NULL
> coef(po1) <- c(r=1,sigma=1)
> stopifnot(all.equal(coef(po1),c(r=1,sigma=1)))
> coef(po1) <- NULL
> coef(po1,transform=TRUE) <- c(r=0,sigma=0)
> stopifnot(all.equal(coef(po1),c(r=1,sigma=1)))
> 
> pompExample(sir,envir=NULL) %>% extract2(1) %>%
+   window(end=0.12) -> po2
> po2 %>% simulate(seed=4358686) %>% as.data.frame()
    time reports      S    I       R cases       W seas1 seas2  seas3
1 0.0192     643 136185 2085 1961717  1051  0.0281 0.663 0.197 0.1395
2 0.0385     625 135920 2106 1961963  1006 -0.2345 0.654 0.230 0.1157
3 0.0577     650 135555 2183 1962268  1083  0.0194 0.639 0.266 0.0952
4 0.0769     624 135180 2246 1962523  1044 -0.0823 0.619 0.303 0.0780
5 0.0962     686 134729 2332 1962895  1139 -0.0201 0.595 0.341 0.0641
6 0.1154     742 134298 2353 1963336  1184 -0.0699 0.567 0.379 0.0536
> 
> 
