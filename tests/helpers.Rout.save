
R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> set.seed(901772384)
> 
> library(pomp)
> 
> try(eff_sample_size())
Error : in 'eff_sample_size': 'object' is a required argument.
> try(eff_sample_size("bob"))
Error : 'eff_sample_size' is undefined for 'object' of class 'character'.
> 
> try(filter_mean())
Error : in 'filter_mean': 'object' is a required argument.
> try(filter_mean("bob"))
Error : 'filter_mean' is undefined for 'object' of class 'character'.
> 
> try(forecast())
Error : in 'forecast': 'object' is a required argument.
> try(forecast("bob"))
Error : 'forecast' is undefined for 'object' of class 'character'.
> 
> try(pred_mean())
Error : in 'pred_mean': 'object' is a required argument.
> try(pred_mean("bob"))
Error : 'pred_mean' is undefined for 'object' of class 'character'.
> 
> try(pred_var())
Error : in 'pred_var': 'object' is a required argument.
> try(pred_var("bob"))
Error : 'pred_var' is undefined for 'object' of class 'character'.
> 
> try(filter_traj())
Error : in 'filter_traj': 'object' is a required argument.
> try(filter_traj("bob"))
Error : 'filter_traj' is undefined for 'object' of class 'character'.
> 
> try(traces())
Error : in 'traces': 'object' is a required argument.
> try(traces("bob"))
Error : 'traces' is undefined for 'object' of class 'character'.
> 
> try(continue())
Error : in 'continue': 'object' is a required argument.
> try(continue("bob"))
Error : 'continue' is undefined for 'object' of class 'character'.
> 
> try(cond_logLik())
Error : in 'cond_logLik': 'object' is a required argument.
> try(cond_logLik("bob"))
Error : 'cond_logLik' is undefined for 'object' of class 'character'.
> 
> try(coef())
Error in coef.default() : argument "object" is missing, with no default
> try(coef("bob"))
Error in object$coefficients : $ operator is invalid for atomic vectors
> 
> try(coef() <- 3)
Error in coef() <- 3 : invalid (NULL) left side of assignment
> try(coef("bob") <- 3)
Error in coef("bob") <- 3 : 
  target of assignment expands to non-language object
> 
> try(logLik())
Error : in 'logLik': 'object' is a required argument.
> logLik("bob")
[1] NA
> 
> try(states())
Error : in 'states': 'object' is a required argument.
> try(states("bob"))
Error : 'states' is undefined for '"object"' of class 'character'.
> 
> try(obs())
Error : in 'obs': 'object' is a required argument.
> try(obs("bob"))
Error : 'obs' is undefined for '"object"' of class 'character'.
> 
> try(melt())
Error : in 'melt': 'data' is a required argument.
> melt("bob")
  value
1   bob
> x <- data.frame(
+   a=letters[1:5],
+   b=rnorm(5),
+   c=as.integer(1:5),
+   d=rexp(5)>0.1
+ )
> try(melt(x))
Error : in 'melt': refusing to melt data of incompatible types.
> try(melt(x[1:3]))
Error : in 'melt': refusing to melt data of incompatible types.
> try(melt(x[2:4]))
Error : in 'melt': refusing to melt data of incompatible types.
> melt(x[2:3])
   L1      value
1   b -1.5199346
2   b -0.6149350
3   b -1.2227341
4   b  0.6934577
5   b -0.5857796
6   c  1.0000000
7   c  2.0000000
8   c  3.0000000
9   c  4.0000000
10  c  5.0000000
> 
> names(x) <- NULL
> melt(x[2:3])
   L1      value
1   1 -1.5199346
2   1 -0.6149350
3   1 -1.2227341
4   1  0.6934577
5   1 -0.5857796
6   2  1.0000000
7   2  2.0000000
8   2  3.0000000
9   2  4.0000000
10  2  5.0000000
> 
> try(
+   list(
+     a=data.frame(x=1:3,y=rnorm(3)),
+     b=1:2,
+     c=c("A","B")
+   ) |> melt()
+ )
Error : in 'melt': refusing to melt data of incompatible types.
> try(
+   list(
+     a=data.frame(x=1:3,y=rnorm(3)),
+     b=1:2,
+     c=c(TRUE,FALSE)
+   ) |> melt()
+ )
Error : in 'melt': refusing to melt data of incompatible types.
> 
