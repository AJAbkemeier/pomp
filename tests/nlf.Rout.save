
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(digits=3)
> png(filename="nlf-%02d.png",res=100)
> 
> library(pomp)
> library(magrittr)
> 
> set.seed(583615606L)
> 
> pompExample(ou2)
newly created object(s):
 ou2 
> estnames=c("alpha.2","alpha.3")
> ou2 %>% window(end=40) %>% as.data.frame() -> dat
> guess <- coef(ou2,estnames,transform=TRUE)
> 
> try(nlf.objfun())
Error : in ‘nlf.objfun’: ‘data’ is a required argument.
> try(nlf.objfun("bob"))
Error : ‘nlf.objfun’ is undefined for ‘data’ of class ‘character’.
> 
> dat %>%
+   nlf.objfun(times="time",t0=0,params=coef(ou2),
+     lags=c(4,6),ntransient=100,nasymp=2000,seed=426094906L,
+     rprocess=ou2@rprocess,rmeasure=ou2@rmeasure,rinit=ou2@rinit) -> m0
> 
> stopifnot(m0(0)==m0(1))
> 
> m2 <- nlf.objfun(m0,est=estnames,seed=426094906L)
> 
> library(subplex)
> subplex(par=guess,fn=m2) -> out
> stopifnot(out$convergence == 0)
> m2(out$par)
[1] 202
> plot(simulate(m2))
> 
> m2s <- nlf.objfun(m2,tensor=TRUE,period=10,seed=426094906L)
> subplex(par=guess,fn=m2s) -> out
> stopifnot(out$convergence == 0)
> m2s(out$par)
[1] 204
> plot(simulate(m2s))
> 
> m2t <- nlf.objfun(m2s,tensor=FALSE,seed=426094906L)
> subplex(par=guess,fn=m2t) -> out
> stopifnot(out$convergence == 0)
> m2t(out$par)
[1] 203
> plot(simulate(m2t))
> 
> nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=100)
<object of class ‘nlf_objfun’>
> nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=100,ntransient=100)
<object of class ‘nlf_objfun’>
> nlf.objfun(ou2,lags=c(1,2,3),est=NULL,nasymp=100,ntransient=100)
<object of class ‘nlf_objfun’>
> try(nlf.objfun(ou2,lags=list(1,2,3),est=NULL,nasymp=100,ntransient=100))
Error : in ‘nlf.objfun’: ‘lags’ must be positive integers.
> try(nlf.objfun(ou2,lags=c(-1,2,3),est=estnames,nasymp=100,ntransient=100))
Error : in ‘nlf.objfun’: ‘lags’ must be positive integers.
> try(nlf.objfun(ou2,lags=c(),est=estnames,nasymp=100,ntransient=100))
Error : in ‘nlf.objfun’: ‘lags’ must be positive integers.
> try(nlf.objfun(ou2,lags="of course",est=estnames,nasymp=100,ntransient=100))
Error : in ‘nlf.objfun’: ‘lags’ must be positive integers.
> try(nlf.objfun(ou2,lags=NULL,est=estnames,nasymp=100,ntransient=100))
Error : in ‘nlf.objfun’: ‘lags’ must be positive integers.
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=-100,ntransient=100))
Error : in ‘nlf.objfun’: ‘nasymp’ must be a nonnegative integer (and should be large).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=NULL,ntransient=100))
Error : in ‘nlf.objfun’: ‘nasymp’ must be a nonnegative integer (and should be large).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=NA,ntransient=100))
Error : in ‘nlf.objfun’: ‘nasymp’ must be a nonnegative integer (and should be large).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=c(12,16),ntransient=100))
Error : in ‘nlf.objfun’: ‘nasymp’ must be a nonnegative integer (and should be large).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=100,ntransient=NULL))
Error : in ‘nlf.objfun’: ‘ntransient’ must be larger than the maximum lag (and should be much larger).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=100,ntransient=NA))
Error : in ‘nlf.objfun’: ‘ntransient’ must be larger than the maximum lag (and should be much larger).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=100,ntransient=c(1,2,3)))
Error : in ‘nlf.objfun’: ‘ntransient’ must be larger than the maximum lag (and should be much larger).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=100,ntransient=list(5)))
Error : in ‘nlf.objfun’: ‘ntransient’ must be larger than the maximum lag (and should be much larger).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=100,ntransient=Inf))
Error : in ‘nlf.objfun’: ‘ntransient’ must be larger than the maximum lag (and should be much larger).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=100,ntransient="yes"))
Error : in ‘nlf.objfun’: ‘ntransient’ must be larger than the maximum lag (and should be much larger).
> try(nlf.objfun(ou2,lags=c(1,2,3),est=estnames,nasymp=100,ntransient=3))
Error : in ‘nlf.objfun’: ‘ntransient’ must be larger than the maximum lag (and should be much larger).
> try(nlf.objfun(ou2,lags=c(1,2,3),nrbf=2,nasymp=100,ntransient=300))
Error : in ‘nlf.objfun’: ‘nrbf’ must be at least 4.
> try(nlf.objfun(ou2,lags=c(1,2,3),nrbf=NA,nasymp=100,ntransient=300))
Error : in ‘nlf.objfun’: ‘nrbf’ must be at least 4.
> try(nlf.objfun(ou2,lags=c(1,2,3),nrbf=NULL,nasymp=100,ntransient=300))
Error : in ‘nlf.objfun’: ‘nrbf’ must be at least 4.
> try(nlf.objfun(ou2,lags=c(1,2,3),nrbf="4",nasymp=100,ntransient=300))
Error : in ‘nlf.objfun’: ‘nrbf’ must be at least 4.
> try(nlf.objfun(ou2,lags=c(1,2,3),period=Inf,nasymp=100,ntransient=300))
Error : in ‘nlf.objfun’: ‘period’ must be single finite number or NA.
> nlf.objfun(ou2,lags=c(1,2,3),period=-5,nasymp=100,ntransient=300)
<object of class ‘nlf_objfun’>
> try(nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,transform.data=3))
Error : in ‘nlf.objfun’: object 'transform.data' of mode 'function' was not found
> try(nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,transform.data=list()))
Error : in ‘nlf.objfun’: object 'transform.data' of mode 'function' was not found
> try(nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,transform.data="bob"))
Error : in ‘nlf.objfun’: object 'bob' of mode 'function' was not found
> try(nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,transform.data=NULL))
Error : in ‘nlf.objfun’: object 'transform.data' of mode 'function' was not found
> try(nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,transform.data=NA))
Error : in ‘nlf.objfun’: object 'transform.data' of mode 'function' was not found
> try(nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,fail.value=c(10,20)))
Error : in ‘nlf.objfun’: ‘fail.value’ should be a single (large) number or ‘NA’.
> try(nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,fail.value=NULL))
Error : in ‘nlf.objfun’: ‘fail.value’ should be a single (large) number or ‘NA’.
> try(nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,fail.value="no"))
Error : in ‘nlf.objfun’: ‘fail.value’ should be a single (large) number or ‘NA’.
> nlf.objfun(ou2,lags=c(1,2,3),nasymp=100,ntransient=300,fail.value=10)
<object of class ‘nlf_objfun’>
Warning message:
in ‘nlf’: ‘fail.value’ should be a large number or ‘NA’. 
> 
> po <- ou2
> time(po) <- c(1:5,8:10)
> try(nlf.objfun(po,lags=c(1,2,3),period=-5,nasymp=100,ntransient=300))
Error : in ‘nlf.objfun’: NLF requires uniform sampling frequency.
> 
> dev.off()
null device 
          1 
> 
