
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(digits=3)
> 
> library(pomp)
Welcome to pomp version 2.7.2.0!
As of version 2.7.1.0, important changes have been made to the
default settings of the particle filtering algorithms in
'pfilter', 'mif2', 'pmcmc', 'bsmc2'.
These changes are not backward compatible.
See the package NEWS for the details.

For information on upgrading your pomp version < 2 code, see the
"pomp version 2 upgrade guide" at https://kingaa.github.io/pomp/.

> 
> ou2() -> ou2
> 
> set.seed(9994847L)
> 
> pf <- pfilter(ou2,Np=1000)
> logLik(pf)
[1] -478
> stopifnot(logLik(pf)==sum(cond.logLik(pf)))
> range(eff.sample.size(pf))
[1]   2.88 243.72
> range(cond.logLik(pf))
[1] -9.32 -3.84
> names(as(pf,"data.frame"))
[1] "time"        "y1"          "y2"          "x1"          "x2"         
[6] "ess"         "cond.loglik"
> identical(as(pf,"data.frame"),as.data.frame(pf))
[1] TRUE
> 
> try(pfilter())
Error : in 'pfilter': 'data' is a required argument.
> try(pfilter("bob"))
Error : 'pfilter' is undefined for 'data' of class 'character'.
> 
> try(pfilter(ou2))
Error : in 'pfilter': 'Np' must be specified.
> try(pfilter(ou2,Np=NULL))
Error : in 'pfilter': 'Np' must be specified.
> try(pfilter(ou2,Np=-10))
Error : in 'pfilter': number of particles, 'Np', must be a positive integer.
> try(pfilter(ou2,Np=c(10,20,30)))
Error : in 'pfilter': 'Np' must have length 1 or length 101.
> pfilter(ou2,Np=ceiling(runif(101,min=10,max=100)))
<object of class 'pfilterd_pomp'>
> try(pfilter(ou2,Np=100,tol=NA))
Error : in 'pfilter': 'tol' should be a small nonnegative number.
> try(pfilter(ou2,Np=100,tol=-1))
Error : in 'pfilter': 'tol' should be a small nonnegative number.
> try(pfilter(ou2,Np=100,tol=NULL))
Error : in 'pfilter': 'tol' should be a small nonnegative number.
> try(pfilter(ou2,Np=100,tol=c(1,10,20)))
Error : in 'pfilter': 'tol' should be a small nonnegative number.
> 
> po <- ou2
> coef(po) <- NULL
> try(pfilter(po,Np=100))
Error : in 'pfilter': in 'rprocess': variable 'x1' not found among the state variables.
In addition: Warning message:
in default 'rinit': there are no parameters with suffix '.0' or '_0'. See '?rinit_spec'. 
> try(pfilter(po,Np=100,params=c()))
Error : in 'pfilter': in 'rprocess': variable 'x1' not found among the state variables.
In addition: Warning message:
in default 'rinit': there are no parameters with suffix '.0' or '_0'. See '?rinit_spec'. 
> try(pfilter(po,Np=100,params=NULL))
Error : in 'pfilter': in 'rprocess': variable 'x1' not found among the state variables.
In addition: Warning message:
in default 'rinit': there are no parameters with suffix '.0' or '_0'. See '?rinit_spec'. 
> try(pfilter(po,Np=100,params=c(1,2,3)))
Error : in 'pfilter': 'params' must be a named numeric vector.
> try(pfilter(po,Np=100,params=c(a=1,b=2,c=3)))
Error : in 'pfilter': in 'rprocess': variable 'x1' not found among the state variables.
In addition: Warning message:
in default 'rinit': there are no parameters with suffix '.0' or '_0'. See '?rinit_spec'. 
> try(pfilter(po,Np=100,params=list()))
Error : in 'pfilter': in 'rprocess': variable 'x1' not found among the state variables.
In addition: Warning message:
in default 'rinit': there are no parameters with suffix '.0' or '_0'. See '?rinit_spec'. 
> pf <- pfilter(po,Np=100,params=as.list(coef(ou2)))
> 
> pf <- pfilter(pf)
> try(pfilter(pf,Np=-1000))
Error : in 'pfilter': number of particles, 'Np', must be a positive integer.
> try(pfilter(pf,tol=-1))
Error : in 'pfilter': 'tol' should be a small nonnegative number.
> stopifnot(all.equal(coef(pf),coef(ou2)))
> theta <- coef(ou2)
> theta["alpha_2"] <- 0.1
> pf1 <- pfilter(pf,params=theta,Np=100,tol=1e-20)
Warning messages:
1: in 'pfilter': the 'tol' argument is deprecated and will be removed in a future release.
Currently, the default value of 'tol' is 0;
in future releases, the option to choose otherwise will be removed. 
2: in 'pfilter': 11 filtering failures occurred. 
> stopifnot(identical(coef(pf1),theta))
> 
> try(pfilter(ou2,params=parmat(coef(ou2),100)))
Error : in 'pfilter': 'params' must be a named numeric vector.
> try(pfilter(ou2,Np=100,params=parmat(coef(ou2),100)))
Error : in 'pfilter': 'params' must be a named numeric vector.
> 
> pf2 <- pfilter(ou2,Np=function(k)c(100,150)[(k-1)%%2+1])
> table(pf2@Np)

100 150 
 50  51 
> try(pfilter(pf2,Np=function(k)c(100,-150)[(k-1)%%2+1]))
Error : in 'pfilter': number of particles, 'Np', must be a positive integer.
> try(pfilter(pf2,Np=function(k)c(100,-150)))
Error : in 'pfilter': if 'Np' is a function, it must return a single positive integer.
> try(pfilter(pf2,Np="many"))
Error : in 'pfilter': 'Np' must be a number, a vector of numbers, or a function.
> 
> theta <- coef(ou2)
> theta["tau"] <- 0
> try(pfilter(pf,params=theta))
<object of class 'pfilterd_pomp'>
Warning message:
in 'pfilter': 100 filtering failures occurred. 
> theta <- coef(ou2)
> theta["sigma_2"] <- Inf
> try(pfilter(pf,params=theta))
Error : in 'pfilter': 'dmeasure' returns illegal value.
Likelihood, data, states, and parameters are:
   time:            2
    lik:          NaN
     y1:      1.83463
     y2:       6.2733
     x1:          Inf
     x2:          NaN
alpha_1:          0.8
alpha_2:         -0.5
alpha_3:          0.3
alpha_4:          0.9
sigma_1:            3
sigma_2:          Inf
sigma_3:            2
    tau:            1
   x1_0:           -3
   x2_0:            4
> theta <- coef(ou2)
> theta["alpha_1"] <- 1e60
> try(pfilter(pf,params=theta,pred.var=TRUE))
Error : in 'pfilter': non-finite state variable: x1
> 
> try(pfilter(pf,rprocess=onestep(
+   function(x, t, params, delta.t, ...)stop("yikes!"))))
Error : in 'pfilter': in 'rprocess': yikes!
> try(pfilter(pf,dmeasure=Csnippet("error(\"ouch!\");")))
Error : in 'pfilter': in 'dmeasure': ouch!
> try(pfilter(pf,dmeasure=function(log,...) -Inf))
Error : in 'pfilter': 'dmeasure' returns illegal value.
Likelihood, data, states, and parameters are:
   time:            1
    lik:         -Inf
     y1:     -4.05129
     y2:      4.78064
     x1:     0.682399
     x2:      3.51642
alpha_1:          0.8
alpha_2:         -0.5
alpha_3:          0.3
alpha_4:          0.9
sigma_1:            3
sigma_2:         -0.5
sigma_3:            2
    tau:            1
   x1_0:           -3
   x2_0:            4
> 
> set.seed(388966382L)
> capture.output(try(pfilter(pf,Np=2,max.fail=15,tol=1e-17,verbose=TRUE,filter.mean=TRUE)),
+   type="message") -> out
pfilter timestep 5 of 100 finished
pfilter timestep 10 of 100 finished
pfilter timestep 15 of 100 finished
pfilter timestep 20 of 100 finished
pfilter timestep 25 of 100 finished
pfilter timestep 30 of 100 finished
> stopifnot(
+   sum(grepl("filtering failure at",out))==16,
+   grepl("too many filtering failures",out[[17]])
+ )
> 
> pf1 <- pfilter(pf,save.states=TRUE,filter.traj=TRUE)
> pf2 <- pfilter(pf,pred.mean=TRUE,pred.var=TRUE,filter.mean=TRUE)
> pf3 <- pfilter(pf,t0=1,filter.traj=TRUE)
> pf4 <- pfilter(pf,dmeasure=Csnippet("lik = (give_log) ? R_NegInf : 0;"),
+   filter.traj=TRUE)
Warning message:
in 'pfilter': 100 filtering failures occurred. 
> names(as(pf2,"data.frame"))
 [1] "time"           "y1"             "y2"             "ess"           
 [5] "cond.loglik"    "pred.mean.x1"   "pred.mean.x2"   "pred.var.x1"   
 [9] "pred.var.x2"    "filter.mean.x1" "filter.mean.x2"
> dim(filter.traj(pf3))
[1]   2   1 100
> dimnames(filter.traj(pf3))
$variable
[1] "x1" "x2"

$rep
[1] "1"

$time
  [1] "1"   "2"   "3"   "4"   "5"   "6"   "7"   "8"   "9"   "10"  "11"  "12" 
 [13] "13"  "14"  "15"  "16"  "17"  "18"  "19"  "20"  "21"  "22"  "23"  "24" 
 [25] "25"  "26"  "27"  "28"  "29"  "30"  "31"  "32"  "33"  "34"  "35"  "36" 
 [37] "37"  "38"  "39"  "40"  "41"  "42"  "43"  "44"  "45"  "46"  "47"  "48" 
 [49] "49"  "50"  "51"  "52"  "53"  "54"  "55"  "56"  "57"  "58"  "59"  "60" 
 [61] "61"  "62"  "63"  "64"  "65"  "66"  "67"  "68"  "69"  "70"  "71"  "72" 
 [73] "73"  "74"  "75"  "76"  "77"  "78"  "79"  "80"  "81"  "82"  "83"  "84" 
 [85] "85"  "86"  "87"  "88"  "89"  "90"  "91"  "92"  "93"  "94"  "95"  "96" 
 [97] "97"  "98"  "99"  "100"

> try(filter.traj(c(pf1,pf3)))
Error : in 'filter.traj': incommensurate dimensions.
> dim(filter.traj(c(pf1,pf4)))
[1]   2   1 101   2
> dim(as.data.frame(c(pf1,pf4)))
[1] 200   6
> names(dimnames(filter.traj(c(pf1,pf4))))
[1] "variable" "rep"      "time"     "chain"   
> names(melt(as(c(pf1,pf4),"data.frame")))
No id variables; using all as measure variables
[1] "variable" "value"   
> pf2 %>% melt() %>% names()
No id variables; using all as measure variables
[1] "variable" "value"   
> pf2 %>% melt(id="time") %>% names()
[1] "time"     "variable" "value"   
> 
> try(ou2 %>% as.data.frame() %>% pfilter(Np=1000))
Error : in 'pfilter': 'times' should either be a numeric vector of observation times or a single name identifying the column of data that represents the observation times.
> 
> ou2 %>%
+   as.data.frame() %>%
+   subset(select=c(time,y1,y2)) %>%
+   pfilter(
+     times="time",t0=0,Np=500,
+     params=list(x1_0=-3,x2_0=4),
+     rprocess=onestep(
+     step.fun=function(x1,x2,delta.t,...) {
+       setNames(rnorm(n=2,mean=c(x1,x2),sd=5*delta.t),c("x1","x2"))
+     }
+   ),
+     dmeasure=function(x1,x2,y1,y2,...,log) {
+       ll <- sum(dnorm(x=c(y1,y2),mean=c(x1,x2),sd=5,log=TRUE))
+       if (log) ll else exp(ll)
+     }
+   )
<object of class 'pfilterd_pomp'>
> 
