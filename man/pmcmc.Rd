% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmcmc.R
\docType{methods}
\name{Particle MCMC}
\alias{Particle MCMC}
\alias{pmcmc}
\alias{pmcmc,ANY-method}
\alias{pmcmc,missing-method}
\alias{pmcmc-pomp}
\alias{pmcmc,pomp-method}
\alias{pmcmc-pfilterd_pomp}
\alias{pmcmc,pfilterd_pomp-method}
\alias{pmcmc-pmcmcd_pomp}
\alias{pmcmc,pmcmcd_pomp-method}
\title{The particle Markov chain Metropolis-Hastings algorithm}
\usage{
\S4method{pmcmc}{pomp}(object, Nmcmc = 1, start, proposal, Np,
  tol = 1e-17, max.fail = Inf, verbose = getOption("verbose"), ...)

\S4method{pmcmc}{pfilterd_pomp}(object, Nmcmc = 1, Np, tol, ...)

\S4method{pmcmc}{pmcmcd_pomp}(object, Nmcmc, start, proposal, Np, tol,
  max.fail = Inf, verbose = getOption("verbose"), ...)
}
\arguments{
\item{object}{An object of class \sQuote{pomp}.}

\item{Nmcmc}{The number of PMCMC iterations to perform.}

\item{start}{named numeric vector; the starting guess of the parameters.}

\item{proposal}{optional function that draws from the proposal
distribution.  Currently, the proposal distribution must be symmetric for
proper inference: it is the user's responsibility to ensure that it is.
Several functions that construct appropriate proposal function are
provided: see \link{MCMC proposals} for more information.}

\item{Np}{a positive integer; the number of particles to use in each
filtering operation.}

\item{tol}{numeric scalar; particles with log likelihood below \code{tol}
are considered to be \dQuote{lost}.  A filtering failure occurs when, at
some time point, all particles are lost.}

\item{max.fail}{integer; maximum number of filtering failures permitted.
If the number of failures exceeds this number, execution will terminate
with an error.}

\item{verbose}{logical; if TRUE, print progress reports.}

\item{\dots}{Additional arguments are passed to \code{\link{pomp}},
allowing one to supply new or modify existing model characteristics or
components.}
}
\value{
An object of class \sQuote{pmcmcd_pomp}.
}
\description{
The Particle MCMC algorithm for estimating the parameters of a
partially-observed Markov process.  Running \code{pmcmc} causes a particle
random-walk Metropolis-Hastings Markov chain algorithm to run for the
specified number of proposals.
}
\section{Re-running PMCMC Iterations}{

To re-run a sequence of PMCMC
iterations, one can use the \code{pmcmc} method on a \sQuote{pmcmc} object.
By default, the same parameters used for the original PMCMC run are re-used
(except for \code{tol}, \code{max.fail}, and \code{verbose}, the defaults
of which are shown above).  If one does specify additional arguments, these
will override the defaults.
}

\references{
C. Andrieu, A. Doucet, and R. Holenstein (2010)
Particle Markov chain Monte Carlo methods.
Journal of the Royal Statistical Society, Series B, 72: 269â€“342.

C. Andrieu and G.O. Roberts (2009)
The pseudo-marginal approach for computation
Annals of Statistics, 37:697-725.
}
\seealso{
\code{\link{pfilter}}, \link{MCMC proposals}, and the
tutorials on the \href{https://kingaa.github.io/pomp}{package website}.
}
\author{
Edward L. Ionides, Aaron A. King, Sebastian Funk
}
