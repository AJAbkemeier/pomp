% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\docType{methods}
\name{simulate}
\alias{simulate}
\alias{simulate-missing}
\alias{simulate,missing-method}
\alias{simulate-data.frame}
\alias{simulate,data.frame-method}
\alias{simulate-pomp}
\alias{simulate,pomp-method}
\title{Simulations of a partially-observed Markov process}
\usage{
\S4method{simulate}{missing}(nsim = 1, seed = NULL, rinit, rprocess,
  rmeasure, params, states = FALSE, obs = FALSE, times, t0,
  as.data.frame = FALSE, include.data = FALSE, ...,
  verbose = getOption("verbose", FALSE))

\S4method{simulate}{data.frame}(object, nsim = 1, seed = NULL, rinit,
  rprocess, rmeasure, params, states = FALSE, obs = FALSE, times, t0,
  as.data.frame = FALSE, include.data = FALSE, ...,
  verbose = getOption("verbose", FALSE))

\S4method{simulate}{pomp}(object, nsim = 1, seed = NULL, rinit,
  rprocess, rmeasure, params, states = FALSE, obs = FALSE, times, t0,
  as.data.frame = FALSE, include.data = FALSE, ...,
  verbose = getOption("verbose", FALSE))
}
\arguments{
\item{nsim}{The number of simulations to perform.
Note that the number of replicates will be \code{nsim} times \code{ncol(params)}.}

\item{seed}{optional;
if set, the pseudorandom number generator (RNG) will be initialized with \code{seed}.  the random seed to use.
The RNG will be restored to its original state afterward.}

\item{rinit}{simulator of the initial-state distribution.
This can be furnished either as a C snippet, an \R function, or the name of a pre-compiled native routine available in a dynamically loaded library.
Setting \code{rinit=NULL} sets the initial-state simulator to its default.
For more information, see \link[=rinit_spec]{here}.}

\item{rprocess}{simulator of the latent state process, specified using one of the \link[=rprocess_spec]{rprocess plugins}.
Setting \code{rprocess=NULL} removes the latent-state simulator.
For more information, \link[=rprocess_spec]{see the documentation on these plugins}.}

\item{rmeasure}{simulator of the measurement model, specified either as a C snippet, an \R function, or the name of a pre-compiled native routine available in a dynamically loaded library.
Setting \code{rmeasure=NULL} removes the measurement model simulator.
For more information, see \link[=rmeasure_spec]{here}.}

\item{params}{optional; named numeric vector of parameters.
This will be coerced internally to storage mode \code{double}.}

\item{states}{Do we want the state trajectories?}

\item{obs}{Do we want data-frames of the simulated observations?}

\item{times}{the times at which observations are made.
\code{times} must indicate the column of observation times by name or index.
The time vector must be numeric and strictly increasing.
Internally, \code{data} will be internally coerced to an array with storage-mode \code{double}.}

\item{t0}{The zero-time, i.e., the time of the initial state.
This must be no later than the time of the first observation, i.e., \code{t0 <= times[1]}.}

\item{as.data.frame, include.data}{logical;
if \code{as.data.frame=TRUE}, the results are returned as a data-frame.
A factor variable, \sQuote{sim}, distinguishes one simulation from another.
If, in addition, \code{include.data=TRUE}, the original data are included as an additional \sQuote{simulation}.
If \code{as.data.frame=FALSE}, \code{include.data} is ignored.}

\item{...}{additional arguments supply new or modify existing model characteristics or components for use by \pkg{pomp} package algorithms.
When named arguments not recognized by \code{\link{pomp}} are provided, these are made available to all basic components.
This allows the user to pass information to the basic components outside of model parameters, covariates, data, and state variables.
See the \link[=userdata]{documentation here} for information on how to use this facility.}

\item{verbose}{logical; if \code{TRUE}, diagnostic messages will be printed to the console.}

\item{object}{optional; if present, it should be the output of one of \pkg{pomp}'s methods}
}
\value{
If \code{states=FALSE} and \code{obs=FALSE} (the default), a list of \code{nsim} \sQuote{pomp} objects is returned.
Each has a simulated data set, together with the parameters used (in slot \code{params}) and the state trajectories also (in slot \code{states}).
If \code{times} is specified, then the simulated observations will be at times \code{times}.

If \code{nsim=1}, then a single \sQuote{pomp} object is returned (and not a singleton list).

If \code{states=TRUE} and \code{obs=FALSE}, simulated state trajectories are returned as a rank-3 array with dimensions \code{nvar} x \code{(ncol(params)*nsim)} x \code{ntimes}.
Here, \code{nvar} is the number of state variables and \code{ntimes} the length of the argument \code{times}.
The measurement process is not simulated in this case.

If \code{states=FALSE} and \code{obs=TRUE}, simulated observations are returned as a rank-3 array with dimensions \code{nobs} x \code{(ncol(params)*nsim)} x \code{ntimes}.
Here, \code{nobs} is the number of observables.

If both \code{states=TRUE} and \code{obs=TRUE}, then a named list is returned.
It contains the state trajectories and simulated observations as above.
}
\description{
\code{simulate} generates simulations of the state and measurement
processes.
}
\author{
Aaron A. King
}
